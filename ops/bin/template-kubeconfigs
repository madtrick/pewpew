#!/usr/bin/env node

require('ts-node').register({ transpileOnly: true })
const { readdir } = require('fs')
const templater = require('../tools/resolve-k8s-templates').default
const { buildContext } = require('../tools/k8s-build-context-for-templates')
const path = require('path')
const yargs = require('yargs')

const argv = yargs
.option('d', {
  alias: 'templates-dir',
  type: 'string',
  demandOption: true
})
.option('p', {
  alias: 'project-id',
  type: 'string',
  demandOption: false
})
.option('t', {
  alias: 'image-tag',
  type: 'string',
  demandOption: false
}).argv

const main = async () => {
  const context = await buildContext()

  if (argv.t) {
    context.ImageTag = argv.t
  }

  if (argv.p) {
    context.p = argv.p
  }

  const templatesDirPath = path.resolve(process.cwd(), argv.d)

  readdir(templatesDirPath, (err, files) => {
    if (err) {
      console.err(err)
      process.exit(1)
    }

    files.forEach((filepath) => {
      const templateFilePath = path.resolve(process.cwd(), argv.d, filepath)
      templater({ templatedFile: templateFilePath, context })
    })
  })
}

main()
